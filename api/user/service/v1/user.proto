syntax = "proto3";

package api.user.service.v1;

option go_package = "social-network/api/user/service/v1;v1";


service UserService {
    rpc GetUser(GetUserReq) returns (GetUserReply) {
    }

    rpc GetUserByUsername(GetUserByUsernameReq) returns (GetUserByUsernameReply) {
    }

    rpc Save(SaveUserReq) returns (SaveUserReply) {
    }

    rpc CreateUser(CreateUserReq) returns (CreateUserReply) {
    }

    rpc ListUser(ListUserReq) returns (ListUserReply) {
    }
    
    rpc VerifyPassword(VerifyPasswordReq) returns (VerifyPasswordReply) {
    }

    rpc AddFollower(AddFollowerReq) returns (AddFollowerReply) {
    }
}

message GetUserReq {
    string id = 1;
}

message GetUserReply {
    User user = 1;
}
message User {
    string id = 1;
    string username = 2;
    string avatar = 3;
    string bio = 4;
    repeated Friendship friends = 5;
}
  
message Friendship {
    string requester_id = 1;
    string requestee_id = 2;
    string status = 3; 
}

message GetUserByUsernameReq {
    string username = 1;
}

message GetUserByUsernameReply {
    string id = 1;
    string username = 2;
}

message CreateUserReq {
    string username = 1;
    string password = 2;
}

message CreateUserReply {
    string id = 1;
    string username = 2;
}

message ListUserReq {
    string id = 1;
}

message ListUserReply {
    message User {
        string id = 1;
        string name = 2;
    }
    repeated User results = 1;
}


message VerifyPasswordReq {
    string username = 1;
    string password = 2;
}

message VerifyPasswordReply {
    bool ok = 1;
    string id = 2;
}

message SaveUserReq {
    string username = 2;
    string password = 3;
}

message SaveUserReply {
    string id = 1;
}

message AddFollowerReq {
    string user_id = 1;
    string follower_id = 2;
}

message AddFollowerReply {
    string message = 1;
}